0:end
1:identifier
2:;
3:macro_rules!
4:(
5:)
6:{
7:}
8:=>
9:[
10:]
11::
12:$
13:token_repetition_pattern_token1
14:+
15:*
16:?
17:block
18:expr
19:ident
20:item
21:lifetime
22:literal
23:meta
24:pat
25:path
26:stmt
27:tt
28:ty
29:vis
30:primitive_type
31:primitive_type
32:primitive_type
33:primitive_type
34:primitive_type
35:primitive_type
36:primitive_type
37:primitive_type
38:primitive_type
39:primitive_type
40:primitive_type
41:primitive_type
42:primitive_type
43:primitive_type
44:primitive_type
45:primitive_type
46:primitive_type
47:/
48:_
49:\
50:-
51:=
52:->
53:,
54:::
55:!
56:.
57:@
58:&
59:#
60:%
61:^
62:<
63:>
64:|
65:~
66:'
67:as
68:async
69:await
70:break
71:const
72:continue
73:default
74:enum
75:fn
76:for
77:if
78:impl
79:let
80:loop
81:match
82:mod
83:pub
84:return
85:static
86:struct
87:trait
88:type
89:union
90:unsafe
91:use
92:where
93:while
94:extern
95:ref
96:else
97:...
98:in
99:<
100:dyn
101:mutable_specifier
102:..
103:..=
104:&&
105:||
106:==
107:!=
108:<=
109:>=
110:<<
111:>>
112:+=
113:-=
114:*=
115:/=
116:%=
117:&=
118:|=
119:^=
120:<<=
121:>>=
122:yield
123:move
124:integer_literal
125:"
126:"
127:char_literal
128:escape_sequence
129:true
130:false
131:line_comment
132:shebang
133:self
134:super
135:crate
136:metavariable
137:_string_content
138:raw_string_literal
139:float_literal
140:block_comment
141:source_file
142:_statement
143:empty_statement
144:expression_statement
145:macro_definition
146:macro_rule
147:_token_pattern
148:token_tree_pattern
149:token_binding_pattern
150:token_repetition_pattern
151:fragment_specifier
152:token_tree
153:token_repetition
154:attribute_item
155:inner_attribute_item
156:attribute
157:mod_item
158:foreign_mod_item
159:declaration_list
160:struct_item
161:union_item
162:enum_item
163:enum_variant_list
164:enum_variant
165:field_declaration_list
166:field_declaration
167:ordered_field_declaration_list
168:extern_crate_declaration
169:const_item
170:static_item
171:type_item
172:function_item
173:function_signature_item
174:function_modifiers
175:where_clause
176:where_predicate
177:impl_item
178:trait_item
179:associated_type
180:trait_bounds
181:higher_ranked_trait_bound
182:removed_trait_bound
183:type_parameters
184:const_parameter
185:constrained_type_parameter
186:optional_type_parameter
187:let_declaration
188:use_declaration
189:_use_clause
190:scoped_use_list
191:use_list
192:use_as_clause
193:use_wildcard
194:parameters
195:self_parameter
196:variadic_parameter
197:parameter
198:extern_modifier
199:visibility_modifier
200:_type
201:bracketed_type
202:qualified_type
203:lifetime
204:array_type
205:for_lifetimes
206:function_type
207:tuple_type
208:unit_type
209:generic_function
210:generic_type
211:generic_type_with_turbofish
212:bounded_type
213:type_arguments
214:type_binding
215:reference_type
216:pointer_type
217:empty_type
218:abstract_type
219:dynamic_type
220:_expression_except_range
221:_expression
222:macro_invocation
223:token_tree
224:_delim_tokens
225:_non_delim_token
226:scoped_identifier
227:scoped_type_identifier
228:scoped_type_identifier
229:range_expression
230:unary_expression
231:try_expression
232:reference_expression
233:binary_expression
234:assignment_expression
235:compound_assignment_expr
236:type_cast_expression
237:return_expression
238:yield_expression
239:call_expression
240:arguments
241:array_expression
242:parenthesized_expression
243:tuple_expression
244:unit_expression
245:struct_expression
246:field_initializer_list
247:shorthand_field_initializer
248:field_initializer
249:base_field_initializer
250:if_expression
251:let_condition
252:_let_chain
253:_condition
254:else_clause
255:match_expression
256:match_block
257:match_arm
258:match_arm
259:match_pattern
260:while_expression
261:loop_expression
262:for_expression
263:const_block
264:closure_expression
265:closure_parameters
266:loop_label
267:break_expression
268:continue_expression
269:index_expression
270:await_expression
271:field_expression
272:unsafe_block
273:async_block
274:block
275:_pattern
276:tuple_pattern
277:slice_pattern
278:tuple_struct_pattern
279:struct_pattern
280:field_pattern
281:remaining_field_pattern
282:mut_pattern
283:range_pattern
284:ref_pattern
285:captured_pattern
286:reference_pattern
287:or_pattern
288:_literal
289:_literal_pattern
290:negative_literal
291:string_literal
292:boolean_literal
293:source_file_repeat1
294:macro_definition_repeat1
295:token_tree_pattern_repeat1
296:token_tree_repeat1
297:_non_special_token_repeat1
298:declaration_list_repeat1
299:enum_variant_list_repeat1
300:enum_variant_list_repeat2
301:field_declaration_list_repeat1
302:ordered_field_declaration_list_repeat1
303:function_modifiers_repeat1
304:where_clause_repeat1
305:trait_bounds_repeat1
306:type_parameters_repeat1
307:use_list_repeat1
308:parameters_repeat1
309:for_lifetimes_repeat1
310:tuple_type_repeat1
311:type_arguments_repeat1
312:delim_token_tree_repeat1
313:arguments_repeat1
314:array_expression_repeat1
315:tuple_expression_repeat1
316:field_initializer_list_repeat1
317:match_block_repeat1
318:closure_parameters_repeat1
319:tuple_pattern_repeat1
320:slice_pattern_repeat1
321:struct_pattern_repeat1
322:string_literal_repeat1
323:closure_pattern
324:field_identifier
325:let_chain
326:shorthand_field_identifier
327:type_identifier
